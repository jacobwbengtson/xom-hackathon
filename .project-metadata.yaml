name: LLM Chatbot Augmented with Enterprise Data
description: |
  This AMP demonstrates how to use an open source pre-trained instruction-following LLM (Large Language Model) to build a ChatBot-like web application. The responses of the LLM are enhanced by giving it context from an internal knowledge base. This context is retrieved by using an open source Vector Database to do semantic search.

author: Jake
specification_version: 1.0
prototype_version: 1.0
date: "2025-04-13"

environment_variables:
  EMBEDDING_MODEL_ID:
    default: "embedding_model_id"
    description: >-
      Get the MODEL_ID from Cloduera AI -> Model Endpoints -> [model of interest] -> Model Endpoint Details
  EMBEDDING_MODEL_ENDPOINT:
    default: "embedding_model_endpoint"
    description: >-
      Get the EMBEDDING_MODEL_ENDPOINT from Cloudera AI -> Model Endpoints -> [model of interest] -> URL under the model name
  LLM_MODEL_ID:
    default: "llm_model_id"
    description: >-
      Get the LLM_MODEL_ID from Cloduera AI -> Model Endpoints -> [model of interest] -> Model Endpoint Details
  LLM_MODEL_ENDPOINT:
    default: "llm_model_endpoint"
    description: >-
      Get the LLM_MODEL_ENDPOINT from Cloudera AI -> Model Endpoints -> [model of interest] -> URL under the model name

runtimes:
  - editor: PBJ Workbench
    kernel: Python 3.10
    edition: Standard

tasks:

  - type: run_session
    name: Install Dependencies
    script: 1_session-install-deps/install_dependencies.py
    short_summary: Install Dependencies
    kernel: python3
    cpu: 2
    memory: 8
    
  - type: create_job
    name: Populate Vector DB with documents embeddings
    entity_label: vectordb_insert
    script: 3_job-populate-vectordb/vectordb_insert.py
    arguments: None
    short_summary: Create job to populate Vector Database with document embeddings. 
    long_summary: Create job to launch Milvus Vector Database locally and insert embeddings for documents. Embeddings are generated by the locally running embeddings model.
    cpu: 1
    memory: 4
    environment:
      TASK_TYPE: CREATE/RUN_JOB

  - type: run_job
    entity_label: vectordb_insert
    short_summary: Populate Vector DB with documents embeddings
  
  - type: start_application
    name: CML LLM Chatbot
    subdomain: cmlllm
    script: 4_app/llm_rag_app.py
    short_summary: Start CML LLM Chatbot application
    long_summary: This application requires an available GPU to run the LLM model. Startup may be delayed if autoscaling is being performed or fail if GPU cannot be scheduled on this workspace. Please contact your administrator for GPU scheduling.
    cpu: 2
    memory: 16
    environment_variables:
      TASK_TYPE: START_APPLICATION
